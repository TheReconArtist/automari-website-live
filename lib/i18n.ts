export const i18n = {
  en: {
    common: {
      appName: "Automari AI",
      demoBadge: "Demo Mode",
      newEmail: "New Email",
      searchEmails: "Search emails...",
      selectEmail: "Select an email to view its content and AI actions.",
      noEmails: "No emails in inbox.",
      loading: "Loading...",
      error: "An error occurred.",
    },
    tabs: {
      inbox: "Inbox",
      smartReply: "Smart Reply",
      rules: "Rules",
      metrics: "Metrics",
    },
    inbox: {
      liveDemoTitle: "Live Demo: AI Email Automation",
      liveDemoSubtitle: "See our intelligent AI agents in action, revolutionizing email management for businesses.",
      sender: "Sender",
      subject: "Subject",
      body: "Body",
      time: "Time",
      read: "Read",
      category: "Category",
      labels: "Labels",
      priorityScore: "Priority Score",
      archive: "Archive",
      snooze: "Snooze",
      assign: "Assign",
      markPriority: "Mark Priority",
    },
    thread: {
      aiSummary: "AI Summary",
      suggestedReplies: "Suggested Replies",
      draftReply: "Draft Reply",
      tone: "Tone",
      professional: "Professional",
      friendly: "Friendly",
      brief: "Brief",
      insertSnippets: "Insert Snippets",
      faq: "FAQ",
      pricing: "Pricing",
      bookingLink: "Booking Link",
      replyWithAI: "Reply with AI",
      categorize: "Categorize",
      assign: "Assign",
      createRule: "Create Rule from this",
    },
    smartReply: {
      playgroundTitle: "Smart Reply Playground",
      playgroundSubtitle: "Paste an email below to generate AI-powered replies.",
      pasteEmail: "Paste email content here...",
      generateReplies: "Generate 3 Replies",
      edit: "Edit",
      copy: "Copy",
      insertToDraft: "Insert to Draft",
      typingAnimation: "AI is drafting replies...",
    },
    rules: {
      rulesBuilderTitle: "Automation Rules Builder",
      rulesBuilderSubtitle: "Create and manage custom rules to automate your email workflow.",
      newRule: "New Rule",
      if: "IF",
      then: "THEN",
      sender: "Sender",
      contains: "contains",
      subject: "Subject",
      body: "Body",
      hasLabel: "has label",
      age: "age (hours)",
      autoReply: "auto-reply template",
      applyLabel: "apply label",
      assignTeammate: "assign to teammate",
      snooze: "snooze (hours)",
      draftFollowUp: "draft follow-up",
      testPanel: "Test Rules",
      runOnSample: "Run on sample inbox",
      matches: "matches",
      wouldHappen: "would happen:",
      addCondition: "Add Condition",
      addAction: "Add Action",
      saveRule: "Save Rule",
      cancel: "Cancel",
    },
    metrics: {
      metricsTitle: "Performance Metrics",
      processedEmails: "Processed Emails",
      avgResponseTime: "Avg. Response Time",
      autoReplyRate: "Auto-Reply Rate",
      savedMinutes: "Saved Minutes",
      last7Days: "Last 7 days",
      unitEmails: "emails",
      unitMinutes: "min",
      unitPercent: "%",
    },
    toasts: {
      ruleSaved: "Rule saved successfully!",
      ruleDeleted: "Rule deleted.",
      replyCopied: "Reply copied to clipboard!",
      replyInserted: "Reply inserted to draft!",
      emailArchived: "Email archived.",
      emailSnoozed: "Email snoozed.",
    }
  },
};

export type Locale = keyof typeof i18n;

export const getDictionary = (locale: Locale) => i18n[locale];
